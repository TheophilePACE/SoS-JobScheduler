/**
 * Copyright (C) 2014 Jean-Vincent GENNADE http://bigloupe.github.io/SoS-JobScheduler/
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License
 */
package org.jobscheduler.dashboard.ocab;


import java.awt.Color;
import java.io.File;
import java.io.FileFilter;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextPane;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import javax.swing.text.MutableAttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

import org.jobscheduler.dashboard.jobdefinition.xml.Job;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Jean vincent
 */
public class ConvertisseurTwsJbs extends javax.swing.JFrame {


    /**
     * Creates new form ConvertisseurTwsJbs
     */
    public ConvertisseurTwsJbs() throws RemoteException {
        
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "Excel", "xlsm","xlss");
        jFileChooser1.setAcceptAllFileFilterUsed(false);
        jFileChooser1.setFileFilter(filter);
        jFileChooser1.setMultiSelectionEnabled(true);
        jProgressBar1.setMaximum(100);
       
jLabel4.setVisible(false);
jLabel9.setText(System.getProperty("user.dir")+"/");

temp.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
    	jFileChooserTempActionPerformed(evt);
    }
});
temp.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
    }
     
    

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jFileChooser1 = new javax.swing.JFileChooser();
        jProgressBar1 = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jRadioButton1 = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Convertisseur Ocab TWS");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setMaximumSize(new java.awt.Dimension(2147483647, 1000));
        setResizable(false);

        jButton1.setBackground(new java.awt.Color(59, 89, 152));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 51, 204));
        jButton1.setText("Convertir");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        jLabel1.setText("Selectionner un fichier Excel");

        jLabel4.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 51, 0));
        jLabel4.setText("Echec conversion");

        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setText("Copyright Â© 2015 Air France . All rights reserved.");

        jLabel7.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(59, 89, 152));
        jLabel7.setText("Convertisseur TWS - Job Scheduler");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("url.jpg"))); // NOI18N
        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel8.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 51, 102));
        jLabel8.setText("Logs");

        jFileChooser1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        jTextPane1.setEditable(false);
        jScrollPane1.setViewportView(jTextPane1);

        jRadioButton1.setText("Mode test");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Destination");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 51, 0));
        jLabel9.setText("path");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(437, 437, 437)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(331, 331, 331)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel9))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jLabel4)
                .addGap(84, 84, 84)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(759, 759, 759)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//convertir
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    	if(jFileChooser1.getSelectedFiles().length!=0)
    	{
    		File[] f=jFileChooser1.getSelectedFiles();
    		for(int p=0; p<f.length;p++)
    		{
    		TraiterExcel(f[p].getAbsolutePath());
    		}   	
    	}
    	else
    	{
    		
    		 File di = new File(jFileChooser1.getCurrentDirectory().getAbsolutePath());
    		
    		FileFilter flft=new FileFilter() {
				
				@Override
				public boolean accept(File pathname) {
					if(pathname.isDirectory()) return false;
					else if(pathname.getName().endsWith(".xlsm")||pathname.getName().endsWith(".xlsx")) return true;
						else return false;
				}
			}; 
			final File fl2[] = di.listFiles(flft);
			
			
			jLabel4.setText("ATTENTE DES FICHIERS");
			jLabel4.setVisible(true);
			

		SwingWorker sw = new SwingWorker(){

		      protected Object doInBackground() throws Exception {

		    	  for(int i=0;i<fl2.length;i++)
	    			{
	    				TraiterExcel(fl2[i].getAbsolutePath());
	    				jLabel4.setText(fl2[i].getName());
	    			}
		    	 
		    	  FileFilter flft2 =new FileFilter() {
						
						@Override
						public boolean accept(File pathname) {
							Date dt=new Date();
							
							if(pathname.isDirectory()&& (dt.getTime()-pathname.lastModified()<=1800000)) return true;
								else return false;
							
						}
					};
					 File di2 = new File(destination);
					File taille[]=di2.listFiles(flft2);
					
					jLabel4.setText("Traitement terminÃ©, Fichier en entrÃ©e :  " +fl2.length+", Dossier rÃ©cent (-30 minutes) dans le rÃ©pertoire courant :"+taille.length);
		        return null;

		      }  

		    };

		    //On lance le SwingWorker

		    sw.execute();
		

    	}
        
    }//GEN-LAST:event_jButton1ActionPerformed

    
    public void TraiterExcel(String absolutePath)
    {jProgressBar1.setValue(0);
    
    	try {
 			ExcelReader exrd = new ExcelReader(absolutePath,destination, this,modeTest);
 			jProgressBar1.setValue(20);
 			if (exrd.treatExcelFile())
 				{
 				
 				int nbFichier=exrd.OutputTest();
 				jTextPane1.setText(jTextPane1.getText()+nbFichier+" fichier(s) ont Ã©tÃ© gÃ©nÃ©rÃ©s");
 				
 				jTextPane1.setText(jTextPane1.getText()+"\n"+"Operation succeeded");
 				jProgressBar1.setValue(100);
 				sQLHighlight(jTextPane1);
 				}
 			else{
 				jTextPane1.setText(jTextPane1.getText()+"\n"+"Error, conversion failed");
 			    }
 			
 		} catch (Throwable e) {
 			// TODO Auto-generated catch block
 			jTextPane1.setText(jTextPane1.getText()+"\n"+e.getMessage());
 			JOptionPane  jope = null;
	jope.showMessageDialog(null, "Erreur, fichier "+absolutePath+" "+e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
 		}
    }
    
    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
    	if(evt.getActionCommand().equals(JFileChooser.APPROVE_SELECTION))
    	{String name;
        name = jFileChooser1.getSelectedFile().getName();
        jLabel4.setText(name);
jLabel4.setVisible(true);
    	}
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        if(jRadioButton1.isSelected())
        {
            modeTest=true;
        }
        else
        {
             modeTest=false;
        }
                
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

    	 
    	
    
    	returnVal= temp.showOpenDialog(null);
    	
    	
// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    public void  jFileChooserTempActionPerformed(java.awt.event.ActionEvent evt)
    {
    	
  if(evt.getActionCommand().equals(JFileChooser.APPROVE_SELECTION))
    
	  {if(temp.getSelectedFile().exists())
    	destination=temp.getSelectedFile().getAbsolutePath()+"\\";
          jLabel9.setText(destination);
   
	  }
    	
    }
    /**
     * @param args the command line arguments
     */
    private void colorWords(String[] strsToHighlight,String text,final StyledDocument doc, Color color, boolean bold){
    	 
        for(String strToHL : strsToHighlight){
                Pattern p = Pattern.compile(strToHL);
                Matcher m = p.matcher(text);
     
                while(m.find() == true){                                                
                        MutableAttributeSet attri = new SimpleAttributeSet();
                        StyleConstants.setForeground(attri, color);
                        StyleConstants.setBold(attri, bold);
     
                        final int start = m.start();
                        final int end = m.end();
                        final int length = end-start;
                        final MutableAttributeSet style = attri;
     
                        SwingUtilities.invokeLater(new Runnable(){
                            public void run(){
                                    doc.setCharacterAttributes(start, length, style, true);
                            }
                        });
                }
        }
    }
     
     
    /**
     * Coloriage des mots 
     * @param JTextPane 
     */
    public void sQLHighlight(JTextPane c) {
        String[] strsToHighlightFunction ={"ATTENTION","Modification","Error","null"};
        String[] succes ={"succeeded"};
     
      
        String text = c.getText().replaceAll("\n", " ");
        final StyledDocument doc = c.getStyledDocument();
        final MutableAttributeSet normal= new SimpleAttributeSet();
        StyleConstants.setForeground(normal, Color.black);
        StyleConstants.setBold(normal, false);
     
        SwingUtilities.invokeLater(new Runnable() {
     
        public void run() {
                doc.setCharacterAttributes(0, doc.getLength(), normal, true);
            }
        });
        colorWords(strsToHighlightFunction, text, doc,  Color.RED, true);
        colorWords(succes, text, doc,  Color.GREEN, true);
       
       
    } 
    public void notification(String st)
    {
    	jTextPane1.setText(jTextPane1.getText()+"\n"+st);
    }
    
    public static void main(String args[]) throws RemoteException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConvertisseurTwsJbs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConvertisseurTwsJbs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConvertisseurTwsJbs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConvertisseurTwsJbs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ConvertisseurTwsJbs().setVisible(true);
                } catch (RemoteException ex) {
                    Logger.getLogger(ConvertisseurTwsJbs.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
       JFileChooser temp=new JFileChooser();;
    // End of variables declaration//GEN-END:variables
    boolean modeTest=false;
    String destination=System.getProperty("user.dir")+"/";
    public void addValueProgressBar(int vlr) {
    	jProgressBar1.setValue(jProgressBar1.getValue()+vlr);
	}
    int returnVal ;
}

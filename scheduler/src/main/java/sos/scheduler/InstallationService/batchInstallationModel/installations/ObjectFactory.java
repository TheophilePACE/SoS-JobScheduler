/**
 * Copyright (C) 2014 BigLoupe http://bigloupe.github.io/SoS-JobScheduler/
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License
 */
/********************************************************* begin of preamble
**
** Copyright (C) 2003-2012 Software- und Organisations-Service GmbH. 
** All rights reserved.
**
** This file may be used under the terms of either the 
**
**   GNU General Public License version 2.0 (GPL)
**
**   as published by the Free Software Foundation
**   http://www.gnu.org/licenses/gpl-2.0.txt and appearing in the file
**   LICENSE.GPL included in the packaging of this file. 
**
** or the
**  
**   Agreement for Purchase and Licensing
**
**   as offered by Software- und Organisations-Service GmbH
**   in the respective terms of supply that ship with this file.
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
** IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
** THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
** PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
** BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
** POSSIBILITY OF SUCH DAMAGE.
********************************************************** end of preamble*/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.03.29 at 11:12:34 AM MESZ 
//


package sos.scheduler.InstallationService.batchInstallationModel.installations;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the sos.scheduler.InstallationService.batchInstallationModel.installations package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _SudoPassword_QNAME = new QName("", "sudoPassword");
    private final static QName _Port_QNAME = new QName("", "port");
    private final static QName _Licence_QNAME = new QName("", "licence");
    private final static QName _Host_QNAME = new QName("", "host");
    private final static QName _SchedulerPort_QNAME = new QName("", "schedulerPort");
    private final static QName _SchedulerAllowedHost_QNAME = new QName("", "schedulerAllowedHost");
    private final static QName _AuthFile_QNAME = new QName("", "authFile");
    private final static QName _LocalDir_QNAME = new QName("", "localDir");
    private final static QName _Password_QNAME = new QName("", "password");
    private final static QName _AuthMethod_QNAME = new QName("", "authMethod");
    private final static QName _Command_QNAME = new QName("", "command");
    private final static QName _InstallPath_QNAME = new QName("", "installPath");
    private final static QName _LicenceOptions_QNAME = new QName("", "licenceOptions");
    private final static QName _RemoteDir_QNAME = new QName("", "remoteDir");
    private final static QName _User_QNAME = new QName("", "user");
    private final static QName _SchedulerId_QNAME = new QName("", "schedulerId");
    private final static QName _UserPathPanelElement_QNAME = new QName("", "UserPathPanelElement");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: sos.scheduler.InstallationService.batchInstallationModel.installations
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Ssh }
     * 
     */
    public Ssh createSsh() {
        return new Ssh();
    }

    /**
     * Create an instance of {@link Globals }
     * 
     */
    public Globals createGlobals() {
        return new Globals();
    }

    /**
     * Create an instance of {@link Installations }
     * 
     */
    public Installations createInstallations() {
        return new Installations();
    }

    /**
     * Create an instance of {@link Installation }
     * 
     */
    public Installation createInstallation() {
        return new Installation();
    }

    /**
     * Create an instance of {@link Ftp }
     * 
     */
    public Ftp createFtp() {
        return new Ftp();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "sudoPassword")
    public JAXBElement<String> createSudoPassword(String value) {
        return new JAXBElement<String>(_SudoPassword_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Short }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "port")
    public JAXBElement<Short> createPort(Short value) {
        return new JAXBElement<Short>(_Port_QNAME, Short.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "licence")
    public JAXBElement<String> createLicence(String value) {
        return new JAXBElement<String>(_Licence_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "host")
    public JAXBElement<String> createHost(String value) {
        return new JAXBElement<String>(_Host_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Short }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "schedulerPort")
    public JAXBElement<Short> createSchedulerPort(Short value) {
        return new JAXBElement<Short>(_SchedulerPort_QNAME, Short.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "schedulerAllowedHost")
    public JAXBElement<String> createSchedulerAllowedHost(String value) {
        return new JAXBElement<String>(_SchedulerAllowedHost_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "authFile")
    public JAXBElement<String> createAuthFile(String value) {
        return new JAXBElement<String>(_AuthFile_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "localDir")
    public JAXBElement<String> createLocalDir(String value) {
        return new JAXBElement<String>(_LocalDir_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "password")
    public JAXBElement<String> createPassword(String value) {
        return new JAXBElement<String>(_Password_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "authMethod")
    public JAXBElement<String> createAuthMethod(String value) {
        return new JAXBElement<String>(_AuthMethod_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "command")
    public JAXBElement<String> createCommand(String value) {
        return new JAXBElement<String>(_Command_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "installPath")
    public JAXBElement<String> createInstallPath(String value) {
        return new JAXBElement<String>(_InstallPath_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "licenceOptions")
    public JAXBElement<String> createLicenceOptions(String value) {
        return new JAXBElement<String>(_LicenceOptions_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "remoteDir")
    public JAXBElement<String> createRemoteDir(String value) {
        return new JAXBElement<String>(_RemoteDir_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "user")
    public JAXBElement<String> createUser(String value) {
        return new JAXBElement<String>(_User_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "schedulerId")
    public JAXBElement<String> createSchedulerId(String value) {
        return new JAXBElement<String>(_SchedulerId_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "UserPathPanelElement")
    public JAXBElement<String> createUserPathPanelElement(String value) {
        return new JAXBElement<String>(_UserPathPanelElement_QNAME, String.class, null, value);
    }

}

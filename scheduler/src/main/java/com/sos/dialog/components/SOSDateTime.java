/********************************************************* begin of preamble
**
** Copyright (C) 2003-2012 Software- und Organisations-Service GmbH. 
** All rights reserved.
**
** This file may be used under the terms of either the 
**
**   GNU General Public License version 2.0 (GPL)
**
**   as published by the Free Software Foundation
**   http://www.gnu.org/licenses/gpl-2.0.txt and appearing in the file
**   LICENSE.GPL included in the packaging of this file. 
**
** or the
**  
**   Agreement for Purchase and Licensing
**
**   as offered by Software- und Organisations-Service GmbH
**   in the respective terms of supply that ship with this file.
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
** IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
** THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
** PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
** BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
** POSSIBILITY OF SUCH DAMAGE.
********************************************************** end of preamble*/
package com.sos.dialog.components;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.DateTime;

/**
 * \class SosDateTime
 * 
 * \brief SosDateTime -
 * 
 * \details
 * 
 * \section SosDateTime.java_intro_sec Introduction
 * 
 * \section SosDateTime.java_samples Some Samples
 * 
 * \code .... code goes here ... \endcode
 * 
 * <p style="text-align:center">
 * <br />
 * --------------------------------------------------------------------------- <br />
 * APL/Software GmbH - Berlin <br />
 * ##### generated by ClaviusXPress (http://www.sos-berlin.com) ######### <br />
 * ---------------------------------------------------------------------------
 * </p>
 * \author Uwe Risse \version 8.05.2012 \see reference
 * 
 * Created on 31.01.2012 09:59:28
 */

public class SOSDateTime extends DateTime {

    @SuppressWarnings("unused")
    private final String conClassName = "SOSDateTime";
    private Date date;
    private int style;

    public SOSDateTime(Composite parent, int style) {
        super(parent, style);
        addSelectionListener(new SelectionAdapter() {
            public void widgetSelected(SelectionEvent e) {
                setInternalDate();
            }
        });
    }

    protected void checkSubclass() {

        // Disable the check that prevents subclassing of SWT components
    }

    private void setInternalDate() {
        Calendar c = Calendar.getInstance();
        c.set(super.getYear(), super.getMonth(), super.getDay(), super.getHours(), super.getMinutes(), super.getSeconds());
        date = c.getTime();
    }

    public Date getDate(String sDate) throws ParseException {
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        Date d = new Date();
        d = formatter.parse(sDate);
        return d;

    }

    public Date getTime(String sTime) throws ParseException {
        SimpleDateFormat formatter = new SimpleDateFormat("HH:mm:ss");
        Date d = new Date();
        try {
            d = formatter.parse(sTime);
        } catch (ParseException e) {
            formatter = new SimpleDateFormat("HH:mm");
            try {
                d = formatter.parse(sTime);
            } catch (ParseException e1) {
                formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                try {
                    d = formatter.parse(sTime);
                } catch (ParseException e2) {
                    formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm");
                    d = formatter.parse(sTime);
                }
            }
        }
        return d;

    }

    public String getISODate()  {
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        return formatter.format(date);
    }

    public String getISOTime() throws ParseException {
        SimpleDateFormat formatter = new SimpleDateFormat("HH:mm:ss");
        return formatter.format(date);
    }

    public int getYear() {
        Calendar c = Calendar.getInstance();
        c.setTime(date);
        return c.get(Calendar.YEAR);
    }

    public int getMonth() {
        Calendar c = Calendar.getInstance();
        c.setTime(date);
        return c.get(Calendar.MONTH);
    }

    public int getDay() {
        Calendar c = Calendar.getInstance();
        c.setTime(date);
        return c.get(Calendar.DAY_OF_MONTH);
    }

    public int getHour() {
        Calendar c = Calendar.getInstance();
        c.setTime(date);
        return c.get(Calendar.HOUR);
    }

    public int getMinute() {
        Calendar c = Calendar.getInstance();
        c.setTime(date);
        return c.get(Calendar.MINUTE);
    }

    public int getSecond() {
        Calendar c = Calendar.getInstance();
        c.setTime(date);
        return c.get(Calendar.SECOND);
    }

    public Date getDate() {
        return date;
    }

    public void setDate(Date date) {
        this.date = date;
        super.setDate(getYear(), getMonth(), getDay());
    }

    public void setTime(Date date) {
        this.date = date;
        super.setTime(getHour(), getMinute(), getSecond());
    }

    public void setDate(String date) throws ParseException  {
        if (!date.equals("")){
           this.setDate(getDate(date));
        }else{
            this.setDate(new Date());
        }
    }

    public void setTime(String time) throws ParseException {
        if (!time.equals("")){
            this.setTime(getTime(time));
        }else{
            this.setTime("00:00:00");
        }
    }

}

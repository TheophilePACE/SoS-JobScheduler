/********************************************************* begin of preamble
**
** Copyright (C) 2003-2012 Software- und Organisations-Service GmbH. 
** All rights reserved.
**
** This file may be used under the terms of either the 
**
**   GNU General Public License version 2.0 (GPL)
**
**   as published by the Free Software Foundation
**   http://www.gnu.org/licenses/gpl-2.0.txt and appearing in the file
**   LICENSE.GPL included in the packaging of this file. 
**
** or the
**  
**   Agreement for Purchase and Licensing
**
**   as offered by Software- und Organisations-Service GmbH
**   in the respective terms of supply that ship with this file.
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
** IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
** THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
** PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
** BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
** POSSIBILITY OF SUCH DAMAGE.
********************************************************** end of preamble*/
package com.sos.dialog.components;
import java.util.prefs.Preferences;

import org.eclipse.swt.SWT;
import org.eclipse.swt.events.ControlAdapter;
import org.eclipse.swt.events.ControlEvent;
import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.widgets.TableColumn;

import com.sos.dialog.comparators.SortBaseComparator;
import com.sos.localization.Messages;

/**
* \class SosTableColumn 
* 
* \brief SosTableColumn - 
* 
* \details
*
* \section SosTableColumn.java_intro_sec Introduction
*
* \section SosTableColumn.java_samples Some Samples
*
* \code
*   .... code goes here ...
* \endcode
*
* <p style="text-align:center">
* <br />---------------------------------------------------------------------------
* <br /> APL/Software GmbH - Berlin
* <br />##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
* <br />---------------------------------------------------------------------------
* </p>
* \author Uwe Risse
* \version 31.01.2012
* \see reference
*
* Created on 31.01.2012 09:59:28
 */
public class SOSTableColumn extends TableColumn {
	@SuppressWarnings("unused")
	private final String	conClassName	= "SOSTableColumn";
	private Preferences		prefs;
	private String			strI18NKey		= null;
	private String			strToolTip		= null;
	//TODO: Besser wäre hier SOSTableDateColumn etc. ur 2012-09-18
    private ColumnType      columnType            = null;
       
    
    public static enum ColumnType {
        DATE, STRING; 
    }    
    
    public ColumnType getColumnType() {
        return  columnType;
    }
    
	public SOSTableColumn(Table table, String pstrI18NKey, int width, Messages objMsg,ColumnType columnType_) {
		super(table, SWT.NONE);
		prefs = Preferences.userNodeForPackage(this.getClass());
		strI18NKey = pstrI18NKey;
		String strText = objMsg.getLabel(pstrI18NKey);
		String strToolTip = objMsg.getLabel(pstrI18NKey + ".tooltip");
		this.columnType = columnType_;
		createColumn(table, SWT.NONE, strText, width);
	}

	public SOSTableColumn(Table table, String pstrI18NKey, int width, Messages objMsg) {
        super(table, SWT.NONE);
        prefs = Preferences.userNodeForPackage(this.getClass());
        strI18NKey = pstrI18NKey;
        String strText = objMsg.getLabel(pstrI18NKey);
        String strToolTip = objMsg.getLabel(pstrI18NKey + ".tooltip");
        this.columnType = ColumnType.STRING;
        createColumn(table, SWT.NONE, strText, width);
    }
	
    public SOSTableColumn(Table table, int style, String text, int width) {
        super(table, style);
        prefs = Preferences.userNodeForPackage(this.getClass());
        this.columnType = ColumnType.STRING;
        createColumn(table, style, text, width);
    }

    public SOSTableColumn(Table table, int style, String text, int width,ColumnType columnType_) {
        super(table, style);
        prefs = Preferences.userNodeForPackage(this.getClass());
        this.columnType = columnType_;
        createColumn(table, style, text, width);
    }

	protected void checkSubclass() {
		// Disable the check that prevents subclassing of SWT components
	}

	private int getIntValue(String s, int d) {
		try {
			return Integer.parseInt(s);
		}
		catch (NumberFormatException n) {
			return d;
		}
	}

	private void createColumn(final Table table, int style, final String text, int width) {
		this.setWidth(width);
		this.addControlListener(new ControlAdapter() {
			public void controlResized(final ControlEvent e) {
				int width = ((TableColumn) e.widget).getWidth();
				prefs.node(table.getClass().getName() + "/col/" + text).put("width", String.valueOf(width));
			}
		});
		if (text != null) {
	        this.setText(text);
	        this.setWidth(this.getIntValue(prefs.node(table.getClass().getName() + "/col/" + this.getText()).get("width", String.valueOf(width)), width));
		}
		if (strToolTip != null) {
			this.setToolTipText(strToolTip);
		}
	}

  
}

/**
 * Copyright (C) 2014 BigLoupe http://bigloupe.github.io/SoS-JobScheduler/
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License
 */
/********************************************************* begin of preamble
**
** Copyright (C) 2003-2012 Software- und Organisations-Service GmbH. 
** All rights reserved.
**
** This file may be used under the terms of either the 
**
**   GNU General Public License version 2.0 (GPL)
**
**   as published by the Free Software Foundation
**   http://www.gnu.org/licenses/gpl-2.0.txt and appearing in the file
**   LICENSE.GPL included in the packaging of this file. 
**
** or the
**  
**   Agreement for Purchase and Licensing
**
**   as offered by Software- und Organisations-Service GmbH
**   in the respective terms of supply that ship with this file.
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
** IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
** THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
** PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
** BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
** POSSIBILITY OF SUCH DAMAGE.
********************************************************** end of preamble*/
package com.sos.JSHelper.Options;

/**
* \class JSOptionBoolean
*
* \brief JSOptionBoolean -
*
* \details
*
* \section JSOptionBoolean.java_intro_sec Introduction
*
* \section JSOptionBoolean.java_samples Some Samples
*
* \code
*   .... code goes here ...
* \endcode
*
* <p style="text-align:center">
* <br />---------------------------------------------------------------------------
* <br /> APL/Software GmbH - Berlin
* <br />##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
* <br />---------------------------------------------------------------------------
* </p>
* \author eqbfd
* @version $Id: SOSOptionBoolean.java 20028 2013-04-30 07:23:47Z kb $23.01.2009
* \see reference
*
* Created on 23.01.2009 14:41:38
 */

/**
 * @author eqbfd
 *
 */
public class SOSOptionBoolean extends SOSOptionElement {

	private static final long	serialVersionUID	= -955477664516893069L;
	private final String	conClassName	= "JSOptionBoolean";
	public final String ControlType = "checkbox";

	/**
	 * \brief JSOptionBoolean
	 *
	 * \details
	 *
	 * @param pPstrKey
	 * @param pPstrDescription
	 * @param pPstrValue
	 * @param pPstrDefaultValue
	 * @param pPflgIsMandatory
	 * @throws Exception
	 */
	public SOSOptionBoolean(final JSOptionsClass pobjParent, final String pPstrKey, final String pPstrDescription, final String pPstrValue, final String pPstrDefaultValue,
			final boolean pPflgIsMandatory) {
		super(pobjParent, pPstrKey, pPstrDescription, pPstrValue, pPstrDefaultValue, pPflgIsMandatory);
		intOptionType = isOptionTypeBoolean; // Boolean
		this.Value(pPstrValue);
		this.setNotDirty();
	}

	/**
	 * \brief Value - Wert des Datenelements festlegen
	 *
	 * \details
	 *
	 * @param pstrValue
	 * @return
	 * @throws Exception
	 */
	@Override
	public void Value(final String pstrValue)  {
		if (isNotEmpty(pstrValue)) {

			/**
			 * \todo �ber den regexp pr�fen, ob die Werte syntaktisch korrekt sind
			 */
			super.Value(pstrValue);
			flgValue = String2Bool();
		}
		else {
			super.Value("");
		}
		flgValue = String2Bool(strValue);
	}

	public void value(final boolean pflgValue)  {

		@SuppressWarnings("unused")
		final String conMethodName = conClassName + "::value";

		flgValue = pflgValue;
		if (pflgValue) {
			this.Value("true");
		}
		else {
			this.Value("false");
		}

	} // public void value}

	public boolean value() {

		@SuppressWarnings("unused")
		final String conMethodName = conClassName + "::Value";

		return flgValue;
	} // public flgValue Value}

	/**
	 *
	 * \brief isTrue
	 *
	 * \details
	 * returns true, if the value of this option is "true".
	 *
	 * \return boolean
	 * \see isFalse()
	 *
	 * @return
	 */
   public boolean isTrue() {

		@SuppressWarnings("unused")
		final String	conMethodName	= conClassName + "::isTrue";

		return flgValue == true;
	} // private boolean isTrue

   /**
    *
    * \brief isFalse
    *
    * \details
    * returns "true", if the value of this option is "false".
    *
    * \return boolean
    * \see isTrue()
    *
    * @return
    */
	public boolean isFalse() {

		@SuppressWarnings("unused")
		final String	conMethodName	= conClassName + "::isFalse";

		return flgValue == false;
	} // private boolean isFalse

	public void setTrue() {

		@SuppressWarnings("unused")
		final String	conMethodName	= conClassName + "::setTrue";

		this.value(true);

	} // private void setTrue

	public void setFalse() {

		@SuppressWarnings("unused")
		final String	conMethodName	= conClassName + "::setFalse";

		this.value(false);

	} // private void setFalse
}

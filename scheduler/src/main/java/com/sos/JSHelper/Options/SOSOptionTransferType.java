/**
 * Copyright (C) 2014 BigLoupe http://bigloupe.github.io/SoS-JobScheduler/
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License
 */
/********************************************************* begin of preamble
**
** Copyright (C) 2003-2012 Software- und Organisations-Service GmbH. 
** All rights reserved.
**
** This file may be used under the terms of either the 
**
**   GNU General Public License version 2.0 (GPL)
**
**   as published by the Free Software Foundation
**   http://www.gnu.org/licenses/gpl-2.0.txt and appearing in the file
**   LICENSE.GPL included in the packaging of this file. 
**
** or the
**  
**   Agreement for Purchase and Licensing
**
**   as offered by Software- und Organisations-Service GmbH
**   in the respective terms of supply that ship with this file.
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
** IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
** THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
** PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
** BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
** POSSIBILITY OF SUCH DAMAGE.
********************************************************** end of preamble*/
package com.sos.JSHelper.Options;
import org.apache.log4j.Logger;

/**
* \class SOSOptionTransferType 
* 
* \brief SOSOptionTransferType - 
* 
* \details
*
* \section SOSOptionTransferType.java_intro_sec Introduction
*
* \section SOSOptionTransferType.java_samples Some Samples
*
* \code
*   .... code goes here ...
* \endcode
*
* <p style="text-align:center">
* <br />---------------------------------------------------------------------------
* <br /> APL/Software GmbH - Berlin
* <br />##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
* <br />---------------------------------------------------------------------------
* </p>
* \author KB
* @version $Id: SOSOptionTransferType.java 20640 2013-07-01 14:05:22Z oh $26.01.2011
* \see reference
*
* Created on 26.01.2011 15:56:25
 */

/**
 * @author KB
 *
 */
public class SOSOptionTransferType extends SOSOptionElement {

	/**
	 * 
	 */
	private static final long	serialVersionUID	= 1359502923543333601L;
	@SuppressWarnings("unused")
	private final String		conClassName		= "SOSOptionTransferType";
	private static final Logger	logger				= Logger.getLogger(SOSOptionTransferType.class);

	private enuTransferTypes	enuTT				= enuTransferTypes.local;
	
	public static enum enuTransferTypes {
		local, /* filesystem on localhost */
		file, /* same as local */
		ftp, sftp, ftps, ssh2, zip, mq, // Message Queue
		http, https, svn, webdav,smb
		/* */;

//		@Deprecated
		public String Text() {
			String strT = this.name();
			return strT;
		}
	}

//
//	public static enum enuTransferTypes {
//		local, /* filesystem on localhost */
//		file, /* same as local */
//		ftp, sftp, ftps, ssh2
//		/* */;
//
//		public String Text() {
//			String strT = this.name();
//			return strT;
//		}
//	}

	/**
	 * \brief SOSOptionTransferType
	 *
	 * \details
	 *
	 * @param pobjParent
	 * @param pstrKey
	 * @param pstrDescription
	 * @param pstrValue
	 * @param pstrDefaultValue
	 * @param pflgIsMandatory
	 */
	public SOSOptionTransferType(final JSOptionsClass pobjParent, final String pstrKey, final String pstrDescription, final String pstrValue, final String pstrDefaultValue,
			final boolean pflgIsMandatory) {
		super(pobjParent, pstrKey, pstrDescription, pstrValue, pstrDefaultValue, pflgIsMandatory);
	}

	public void Value(final enuTransferTypes penuTT) {

		@SuppressWarnings("unused")
		final String conMethodName = conClassName + "::Value";

		enuTT = penuTT;
		String strT = penuTT.Text();
		super.Value(strT);

	} // private void Value

	public boolean isSFtp () {
		Text2Enum();
		return enuTT == enuTransferTypes.sftp;
	}

	public boolean isFtpS () {
		Text2Enum();
		return enuTT == enuTransferTypes.ftps;
	}

	private void Text2Enum () {
		for (enuTransferTypes enuType : enuTransferTypes.values()) {
			if (strValue.equalsIgnoreCase(enuType.Text())) {
				enuTT = enuType;
				break;
			}
		}
	}
}

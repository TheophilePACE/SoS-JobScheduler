/**
 * Copyright (C) 2014 BigLoupe http://bigloupe.github.io/SoS-JobScheduler/
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License
 */
/********************************************************* begin of preamble
**
** Copyright (C) 2003-2012 Software- und Organisations-Service GmbH. 
** All rights reserved.
**
** This file may be used under the terms of either the 
**
**   GNU General Public License version 2.0 (GPL)
**
**   as published by the Free Software Foundation
**   http://www.gnu.org/licenses/gpl-2.0.txt and appearing in the file
**   LICENSE.GPL included in the packaging of this file. 
**
** or the
**  
**   Agreement for Purchase and Licensing
**
**   as offered by Software- und Organisations-Service GmbH
**   in the respective terms of supply that ship with this file.
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
** IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
** THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
** PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
** BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
** POSSIBILITY OF SUCH DAMAGE.
********************************************************** end of preamble*/
package com.sos.JSHelper.Options;
/**
* \class SOSOptionJSTransferMethod 
* 
* \brief SOSOptionJSTransferMethod - 
* 
* \details
*
* \code
*   .... code goes here ...
* \endcode
*
* <p style="text-align:center">
* <br />---------------------------------------------------------------------------
* <br /> APL/Software GmbH - Berlin
* <br />##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
* <br />---------------------------------------------------------------------------
* </p>
* \author KB
* @version $Id: SOSOptionJSTransferMethod.java 15777 2011-11-25 12:27:39Z kb $12.07.2010
* \see reference
*
* Created on 12.07.2010 14:31:02
 */
/**
 * @author KB
 *
 */
public class SOSOptionJSTransferMethod extends JSOptionValueList {

	/**
	 * 
	 */
	private static final long	serialVersionUID	= 559611781725991697L;

	public enum enuJSTransferModes {
		tcp("tcp"), udp("udp"), jms("jms"), http("http"), telnet("telnet");
		
		public final String	description;

		private enuJSTransferModes() {
			this(null);
		}

		private enuJSTransferModes(String name) {
			String k;
			if (name == null) {
				k = this.name();
			}
			else {
				k = name;
			}
			description = k;
		}
	}
	/**
	 * 
	 */
	@SuppressWarnings("unused")
	private final String		conClassName		= "SOSOptionJSTransferMethod";

	/**
	 * \brief SOSOptionJSTransferMethod
	 *
	 * \details
	 *
	 * @param pPobjParent
	 * @param pPstrKey
	 * @param pPstrDescription
	 * @param pPstrValue
	 * @param pPstrDefaultValue
	 * @param pPflgIsMandatory
	 */
	public SOSOptionJSTransferMethod(JSOptionsClass pPobjParent, String pPstrKey, String pPstrDescription, String pPstrValue, String pPstrDefaultValue,
			boolean pPflgIsMandatory) {
		super(pPobjParent, pPstrKey, pPstrDescription, pPstrValue, pPstrDefaultValue, pPflgIsMandatory);
		// TODO Auto-generated constructor stub
	}

	/**
	 * \brief SOSOptionJSTransferMethod
	 *
	 * \details
	 *
	 * @param pobjParent
	 * @param pstrIndexedKey
	 * @param pstrDescription
	 * @param pstrDefaultValue
	 * @param pflgIsMandatory
	 */
	public SOSOptionJSTransferMethod(JSOptionsClass pobjParent, String pstrIndexedKey, String pstrDescription, String pstrDefaultValue, boolean pflgIsMandatory) {
		super(pobjParent, pstrIndexedKey, pstrDescription, pstrDefaultValue, pflgIsMandatory);
	}

	public boolean isTcp() {
		if (this.Value().equalsIgnoreCase(enuJSTransferModes.tcp.description)) { 
			return true;
		}
		else {
			return false;
		}
	}

	public boolean isUdp() {
		if (this.Value().equalsIgnoreCase(enuJSTransferModes.udp.description)) {
			return true;
		}
		else {
			return false;
		}
	}

	public boolean isJMS() {
		if (this.Value().equalsIgnoreCase(enuJSTransferModes.jms.description)) {
			return true;
		}
		else {
			return false;
		}
	}

	public String getDescription() {
		@SuppressWarnings("unused")
		final String conMethodName = conClassName + "::getDescription";
		String strT = "???";
		if (this.isTcp()) {
			strT = enuJSTransferModes.tcp.description;
		}
		if (this.isUdp()) {
			strT = enuJSTransferModes.udp.description;
		}
		if (this.isJMS()) {
			strT = enuJSTransferModes.jms.description;
		}
		return strT;
	} // private String getDescription
}

/**
 * Copyright (C) 2014 BigLoupe http://bigloupe.github.io/SoS-JobScheduler/
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License
 */
/********************************************************* begin of preamble
**
** Copyright (C) 2003-2012 Software- und Organisations-Service GmbH. 
** All rights reserved.
**
** This file may be used under the terms of either the 
**
**   GNU General Public License version 2.0 (GPL)
**
**   as published by the Free Software Foundation
**   http://www.gnu.org/licenses/gpl-2.0.txt and appearing in the file
**   LICENSE.GPL included in the packaging of this file. 
**
** or the
**  
**   Agreement for Purchase and Licensing
**
**   as offered by Software- und Organisations-Service GmbH
**   in the respective terms of supply that ship with this file.
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
** IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
** THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
** PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
** BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
** POSSIBILITY OF SUCH DAMAGE.
********************************************************** end of preamble*/
package com.sos.scheduler.history;

 

 import com.sos.hibernate.classes.DbItem;
 
import com.sos.scheduler.history.db.SchedulerOrderHistoryDBItem;

/**
* \class SchedulerOrderHistoryFilter 
* 
* \brief SchedulerOrderHistoryFilter - 
* 
* \details
*
* \section SchedulerOrderHistoryFilter.java_intro_sec Introduction
*
* \section SchedulerOrderHistoryFilter.java_samples Some Samples
*
* \code
*   .... code goes here ...
* \endcode
*
* <p style="text-align:center">
* <br />---------------------------------------------------------------------------
* <br /> APL/Software GmbH - Berlin
* <br />##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
* <br />---------------------------------------------------------------------------
* </p>
* \author Uwe Risse
* \version 14.12.2011
* \see reference
*
* Created on 14.12.2011 13:53:37
 */

public class SchedulerOrderHistoryFilter extends SchedulerHistoryFilter implements com.sos.hibernate.interfaces.ISOSHibernateFilter {

	@SuppressWarnings("unused")
	private final String	conClassName	= "SchedulerHistoryFilter";
	private String			status			= "";
	protected String		jobchain		= null;
    protected String        orderid         = null;
    protected String        orderStates     = null;
	protected Long          schedulerOrderHistoryId = null;
	private boolean         isShowRunning = false;
	
 	
	
	public String getOrderid() {
		return orderid;
	}

	public void setOrderid(String orderid) {
		this.orderid = orderid;
	}

 
	public String getJobchain() {
		if (jobchain != null && jobchain.startsWith("/")) {
			return jobchain.substring(1);
		}else {
	    	return jobchain;
		}
	}


	public boolean isFiltered(DbItem dbitem) {
		  SchedulerOrderHistoryDBItem h = (SchedulerOrderHistoryDBItem) dbitem;
		  
 
		  
		  return( this.getIgnoreList().contains(h) || 
				  !this.isShowJobChains() ||
                  this.isShowRunning() ||
                  this.isShowWithError() & !h.haveError() ||
				  this.getSearchField() != null && !this.getSearchField().equals("") && 
				 ((h.getJobChain() != null && !h.getJobChain().toLowerCase().contains(this.getSearchField().toLowerCase())) &&
				 (h.getOrderId() != null && !h.getOrderId().toLowerCase().contains(this.getSearchField().toLowerCase())))); 
  
}			 
	
	public SchedulerOrderHistoryFilter() {
		super();
	}


	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public void setJobchain(String jobchain) {
		this.jobchain = jobchain;
	}

    public Long getSchedulerOrderHistoryId() {
        return schedulerOrderHistoryId;
    }

    public void setSchedulerOrderHistoryId(Long schedulerOrderHistoryId) {
        this.schedulerOrderHistoryId = schedulerOrderHistoryId;
    }

    public String getOrderStates() {
        return orderStates;
    }

    public void setOrderStates(String orderStates) {
        this.orderStates = orderStates;
    }

	public boolean isShowRunning() {
		return isShowRunning;
	}

	public void setShowRunning(boolean isShowRunning) {
		this.isShowRunning = isShowRunning;
	}

}

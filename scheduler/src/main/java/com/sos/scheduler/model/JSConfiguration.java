/**
 * Copyright (C) 2014 BigLoupe http://bigloupe.github.io/SoS-JobScheduler/
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License
 */
/********************************************************* begin of preamble
**
** Copyright (C) 2003-2012 Software- und Organisations-Service GmbH. 
** All rights reserved.
**
** This file may be used under the terms of either the 
**
**   GNU General Public License version 2.0 (GPL)
**
**   as published by the Free Software Foundation
**   http://www.gnu.org/licenses/gpl-2.0.txt and appearing in the file
**   LICENSE.GPL included in the packaging of this file. 
**
** or the
**  
**   Agreement for Purchase and Licensing
**
**   as offered by Software- und Organisations-Service GmbH
**   in the respective terms of supply that ship with this file.
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
** IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
** THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
** PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
** BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
** POSSIBILITY OF SUCH DAMAGE.
********************************************************** end of preamble*/
package com.sos.scheduler.model;
import java.math.BigInteger;

import org.apache.log4j.Logger;

import com.sos.JSHelper.Annotations.JSOptionDefinition;
import com.sos.JSHelper.Options.SOSOptionPortNumber;
import com.sos.VirtualFileSystem.Interfaces.ISOSVirtualFile;
import com.sos.scheduler.model.objects.JSObjBase;
import com.sos.scheduler.model.objects.JSObjSpooler;
import com.sos.scheduler.model.objects.Spooler;

/**
* \class JSConfiguration 
* 
* \brief JSConfiguration - 
* 
* \details
*
* \section JSConfiguration.java_intro_sec Introduction
*
* \section JSConfiguration.java_samples Some Samples
*
* \code
*   .... code goes here ...
* \endcode
*
* <p style="text-align:center">
* <br />---------------------------------------------------------------------------
* <br /> APL/Software GmbH - Berlin
* <br />##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
* <br />---------------------------------------------------------------------------
* </p>
* \author oh
* @version $Id: JSConfiguration.java 20718 2013-07-18 18:16:10Z kb $
* \see reference
*
* Created on 10.02.2011 13:22:07
 */
/**
 * @author oh
 *
 */
public class JSConfiguration extends JSObjBase {
	private final String		conClassName	= "JSConfiguration";
	@SuppressWarnings("unused")
	private static final Logger	logger			= Logger.getLogger(JSConfiguration.class);
	private JSObjSpooler		objSpooler;
	private Spooler.Config		objConfig;
	/**
	 * \option Port
	 * \type SOSOptionPortNumber
	 * \brief Port - PortNumber of JobScheduler
	 *
	 * \details
	 * PortNumber of JobScheduler
	 *
	 * \mandatory: true
	 *
	 * \created 11.02.2011 15:44:17 by KB
	 */
	@JSOptionDefinition(name = "Port", description = "PortNumber of JobScheduler", key = "Port", type = "SOSOptionPortNumber", mandatory = true)
	public SOSOptionPortNumber	Port			= new SOSOptionPortNumber( // ...
														null, // ....
														conClassName + ".Port", // ...
														"PortNumber of JobScheduler", // ...
														"0", // ...
														"4444", // ...
														true);

	public JSConfiguration() {
		//
	}

	public JSConfiguration(final SchedulerObjectFactory schedulerObjectFactory) {
		super();
		objFactory = schedulerObjectFactory;
		objSpooler = objFactory.createSpooler();
		objConfig = getConfig();
	}

	public JSConfiguration(final SchedulerObjectFactory schedulerObjectFactory, final ISOSVirtualFile pobjVirtualFile) {
		super();
		objFactory = schedulerObjectFactory;
		objSpooler = objFactory.createSpooler(pobjVirtualFile);
		objConfig = getConfig();
	}

	public Spooler.Config getConfig() {
		if (objConfig == null) {
			if(objSpooler == null) {
				objConfig = new Spooler.Config();
			}
			else if(objSpooler.getConfig().size() == 0) {
				objConfig = new Spooler.Config();
				objSpooler.getConfig().add(objConfig);
			}
			else {
				objConfig = objSpooler.getConfig().get(0);
			}
		}
		return objConfig;
	}

//	public Spooler.Config load() {
//		@SuppressWarnings("unused")
//		final String conMethodName = conClassName + "::load";
//		Port.Value(objConfig.getPort().toString());
//		return objConfig;
//	} // load

	/**
	 * Gets the XML representation.
	 * 
	 * @return
	 */
	public String toXMLString() {
		return objSpooler.toXMLString();
	}

	/**
	 * 
	 * \brief toXMLFile
	 * 
	 * \details
	 *
	 * \return 
	 *
	 * @return
	 */
	public Object toXMLFile() {
		return objSpooler.toXMLFile();
	} // public Object toXMLFile

	/**
	 * Gets the value of the port property.
	 * 
	 * @return
	 */
	// public String getPort() {
	// return objConfig.getPort().toString();
	// }
	public SOSOptionPortNumber getPort() {
		Port.Value(objConfig.getPort().toString());
		return Port;
	}

	/**
	 * Sets the value of the port property.
	 * 
	 * @param value
	 */
	public void setPort(String value) {
		if (value == null) {
			objConfig.setPort(BigInteger.valueOf(0));
		}
		else {
			objConfig.setPort(new BigInteger(value));
		}
	}

	public void setPort(SOSOptionPortNumber pobjPortNumber) {
		String value = pobjPortNumber.Value();
		if (value == null) {
			objConfig.setPort(BigInteger.valueOf(0));
		}
		else {
			objConfig.setPort(new BigInteger(value));
		}
	}

}

/**
 * Copyright (C) 2014 BigLoupe http://bigloupe.github.io/SoS-JobScheduler/
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License
 */
/********************************************************* begin of preamble
**
** Copyright (C) 2003-2012 Software- und Organisations-Service GmbH. 
** All rights reserved.
**
** This file may be used under the terms of either the 
**
**   GNU General Public License version 2.0 (GPL)
**
**   as published by the Free Software Foundation
**   http://www.gnu.org/licenses/gpl-2.0.txt and appearing in the file
**   LICENSE.GPL included in the packaging of this file. 
**
** or the
**  
**   Agreement for Purchase and Licensing
**
**   as offered by Software- und Organisations-Service GmbH
**   in the respective terms of supply that ship with this file.
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
** IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
** THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
** PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
** BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
** POSSIBILITY OF SUCH DAMAGE.
********************************************************** end of preamble*/
package com.sos.scheduler.model.objects;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.sos.VirtualFileSystem.Interfaces.ISOSVirtualFile;
import com.sos.scheduler.model.SchedulerObjectFactory;

/**
* \class JSObjParams 
* 
* \brief JSObjParams - 
* 
* \details
*
* \section JSObjParams.java_intro_sec Introduction
*
* \section JSObjParams.java_samples Some Samples
*
* \code
*   .... code goes here ...
* \endcode
*
* <p style="text-align:center">
* <br />---------------------------------------------------------------------------
* <br /> APL/Software GmbH - Berlin
* <br />##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
* <br />---------------------------------------------------------------------------
* </p>
* \author oh
* @version $Id: JSObjParams.java 20718 2013-07-18 18:16:10Z kb $
* \see reference
*
* Created on 09.02.2011 15:06:59
 */

/**
 * @author oh
 *
 */
public class JSObjParams extends Params {

	@SuppressWarnings("unused")
	private final String		conClassName	= "JSObjParams";
	@SuppressWarnings("unused")
	private static final Logger	logger			= Logger.getLogger(JSObjParams.class);
	
	public final static String fileNameExtension = ".params.xml";

	public JSObjParams (SchedulerObjectFactory schedulerObjectFactory) {
		objFactory = schedulerObjectFactory;
	}
	
	public JSObjParams (SchedulerObjectFactory schedulerObjectFactory, Params origOrder) {
		objFactory = schedulerObjectFactory;
		setObjectFieldsFrom(origOrder);
	}
	
	public JSObjParams(SchedulerObjectFactory schedulerObjectFactory, ISOSVirtualFile pobjVirtualFile) {
		objFactory = schedulerObjectFactory;
		Params objParams = (Params) unMarshal(pobjVirtualFile);
		setObjectFieldsFrom(objParams);
		setHotFolderSrc(pobjVirtualFile);	
	}
	
	public HashMap<String,String> values() {
		HashMap<String,String> result = new HashMap<String,String>();
		for (Object o : getParamOrCopyParamsOrInclude() ) {
			if (o instanceof Param) {
				JSObjParam p = objFactory.createParam((Param)o);
				result.put(p.getName(), p.getValue());
			}
		}
		return result;
	}
	
	public boolean hasParameterValue(String parameterName) {
		boolean result = false;
		if (values().containsKey(parameterName)) {
			String pValue = values().get(parameterName);
			if (!pValue.equals("")) result = true;
		}
		return result;
	}

}

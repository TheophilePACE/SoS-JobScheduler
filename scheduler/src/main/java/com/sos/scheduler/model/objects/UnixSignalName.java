/********************************************************* begin of preamble
**
** Copyright (C) 2003-2012 Software- und Organisations-Service GmbH. 
** All rights reserved.
**
** This file may be used under the terms of either the 
**
**   GNU General Public License version 2.0 (GPL)
**
**   as published by the Free Software Foundation
**   http://www.gnu.org/licenses/gpl-2.0.txt and appearing in the file
**   LICENSE.GPL included in the packaging of this file. 
**
** or the
**  
**   Agreement for Purchase and Licensing
**
**   as offered by Software- und Organisations-Service GmbH
**   in the respective terms of supply that ship with this file.
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
** IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
** THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
** PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
** BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
** POSSIBILITY OF SUCH DAMAGE.
********************************************************** end of preamble*/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.3-hudson-jaxb-ri-2.2.3-3- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.01.17 at 03:00:56 PM MEZ 
//


package com.sos.scheduler.model.objects;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Unix_signal_name.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="Unix_signal_name">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *     &lt;enumeration value="SIGHUP"/>
 *     &lt;enumeration value="SIGINT"/>
 *     &lt;enumeration value="SIGQUIT"/>
 *     &lt;enumeration value="SIGILL"/>
 *     &lt;enumeration value="SIGTRAP"/>
 *     &lt;enumeration value="SIGABRT"/>
 *     &lt;enumeration value="SIGIOT"/>
 *     &lt;enumeration value="SIGBUS"/>
 *     &lt;enumeration value="SIGFPE"/>
 *     &lt;enumeration value="SIGKILL"/>
 *     &lt;enumeration value="SIGUSR1"/>
 *     &lt;enumeration value="SIGSEGV"/>
 *     &lt;enumeration value="SIGUSR2"/>
 *     &lt;enumeration value="SIGPIPE"/>
 *     &lt;enumeration value="SIGALRM"/>
 *     &lt;enumeration value="SIGTERM"/>
 *     &lt;enumeration value="SIGSTKFLT"/>
 *     &lt;enumeration value="SIGCHLD"/>
 *     &lt;enumeration value="SIGCONT"/>
 *     &lt;enumeration value="SIGSTOP"/>
 *     &lt;enumeration value="SIGTSTP"/>
 *     &lt;enumeration value="SIGTTIN"/>
 *     &lt;enumeration value="SIGTTOU"/>
 *     &lt;enumeration value="SIGURG"/>
 *     &lt;enumeration value="SIGXCPU"/>
 *     &lt;enumeration value="SIGXFSZ"/>
 *     &lt;enumeration value="SIGVTALRM"/>
 *     &lt;enumeration value="SIGPROF"/>
 *     &lt;enumeration value="SIGWINCH"/>
 *     &lt;enumeration value="SIGPOLL"/>
 *     &lt;enumeration value="SIGIO"/>
 *     &lt;enumeration value="SIGPWR"/>
 *     &lt;enumeration value="SIGSYS"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "Unix_signal_name")
@XmlEnum
public enum UnixSignalName {

    SIGHUP("SIGHUP"),
    SIGINT("SIGINT"),
    SIGQUIT("SIGQUIT"),
    SIGILL("SIGILL"),
    SIGTRAP("SIGTRAP"),
    SIGABRT("SIGABRT"),
    SIGIOT("SIGIOT"),
    SIGBUS("SIGBUS"),
    SIGFPE("SIGFPE"),
    SIGKILL("SIGKILL"),
    @XmlEnumValue("SIGUSR1")
    SIGUSR_1("SIGUSR1"),
    SIGSEGV("SIGSEGV"),
    @XmlEnumValue("SIGUSR2")
    SIGUSR_2("SIGUSR2"),
    SIGPIPE("SIGPIPE"),
    SIGALRM("SIGALRM"),
    SIGTERM("SIGTERM"),
    SIGSTKFLT("SIGSTKFLT"),
    SIGCHLD("SIGCHLD"),
    SIGCONT("SIGCONT"),
    SIGSTOP("SIGSTOP"),
    SIGTSTP("SIGTSTP"),
    SIGTTIN("SIGTTIN"),
    SIGTTOU("SIGTTOU"),
    SIGURG("SIGURG"),
    SIGXCPU("SIGXCPU"),
    SIGXFSZ("SIGXFSZ"),
    SIGVTALRM("SIGVTALRM"),
    SIGPROF("SIGPROF"),
    SIGWINCH("SIGWINCH"),
    SIGPOLL("SIGPOLL"),
    SIGIO("SIGIO"),
    SIGPWR("SIGPWR"),
    SIGSYS("SIGSYS");
    private final String value;

    UnixSignalName(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static UnixSignalName fromValue(String v) {
        for (UnixSignalName c: UnixSignalName.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}

/**
 * Copyright (C) 2014 BigLoupe http://bigloupe.github.io/SoS-JobScheduler/
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License
 */
/********************************************************* begin of preamble
**
** Copyright (C) 2003-2012 Software- und Organisations-Service GmbH. 
** All rights reserved.
**
** This file may be used under the terms of either the 
**
**   GNU General Public License version 2.0 (GPL)
**
**   as published by the Free Software Foundation
**   http://www.gnu.org/licenses/gpl-2.0.txt and appearing in the file
**   LICENSE.GPL included in the packaging of this file. 
**
** or the
**  
**   Agreement for Purchase and Licensing
**
**   as offered by Software- und Organisations-Service GmbH
**   in the respective terms of supply that ship with this file.
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
** IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
** THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
** PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
** BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
** POSSIBILITY OF SUCH DAMAGE.
********************************************************** end of preamble*/
package com.sos.hibernate.classes;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

// import com.sos.hibernate.SOSHibernateConstants;
import com.sos.hibernate.SOSHibernateConstants;
import com.sos.i18n.I18NBase;

/**
* \class Filter 
* 
* \brief Filter - 
* 
* \details
*
* \section Filter.java_intro_sec Introduction
*
* \section Filter.java_samples Some Samples
*
* \code
*   .... code goes here ...
* \endcode
*
* <p style="text-align:center">
* <br />---------------------------------------------------------------------------
* <br /> APL/Software GmbH - Berlin
* <br />##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
* <br />---------------------------------------------------------------------------
* </p>
* \author Uwe Risse
* \version 24.01.2012
* \see reference
*
* Created on 24.01.2012 12:34:16
 */
public abstract class SOSHibernateFilter extends I18NBase {
	@SuppressWarnings("unused")
	private final String	conClassName	= "Filter";
	private String			sortMode		= "asc";
	private String			orderCriteria;
	private int				limit			= 500;
	protected String		dateFormat		= "yyyy-MM-dd HH:mm:ss";
	protected Date			endTime;
	protected String		status			= "";

	
	 
	
	public String getDateFormat() {
		return dateFormat;
	}

	public void setDateFormat(String dateFormat) {
		this.dateFormat = dateFormat;
	}

	public String getSortMode() {
		if ((orderCriteria == null) || (orderCriteria.equals("")) || (sortMode == null)) {
			return "";
		}
		else {
			return " " + sortMode;
		}
	}

	public void setSortMode(String sortMode) {
		this.sortMode = sortMode;
	}

	public String getOrderCriteria() {
		if ((orderCriteria == null) || (orderCriteria.equals(""))) {
			return "";
		}
		else {
			return " order by " + orderCriteria;
		}
	}

	public void setOrderCriteria(String orderCriteria) {
		this.orderCriteria = orderCriteria;
	}

	public int getLimit() {
		return limit;
	}

	public void setLimit(int limit) {
		this.limit = limit;
	}

	public void setLimit(String limit) {
		try {
			this.limit = Integer.parseInt(limit);
		}
		catch (NumberFormatException e) {
		}
	}

	public String date2Iso(Date d) {
		SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
		String timeIso = formatter.format(d);
		return timeIso;
	}

	public SOSHibernateFilter() {
		super(SOSHibernateConstants.conPropertiesFileName);
	}

	public SOSHibernateFilter(final String strI28NPropertyFileName) {
		super(strI28NPropertyFileName);
	}
	
	
	

}

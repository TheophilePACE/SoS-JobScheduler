/**
 * Copyright (C) 2014 BigLoupe http://bigloupe.github.io/SoS-JobScheduler/
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License
 */
/********************************************************* begin of preamble
**
** Copyright (C) 2003-2012 Software- und Organisations-Service GmbH. 
** All rights reserved.
**
** This file may be used under the terms of either the 
**
**   GNU General Public License version 2.0 (GPL)
**
**   as published by the Free Software Foundation
**   http://www.gnu.org/licenses/gpl-2.0.txt and appearing in the file
**   LICENSE.GPL included in the packaging of this file. 
**
** or the
**  
**   Agreement for Purchase and Licensing
**
**   as offered by Software- und Organisations-Service GmbH
**   in the respective terms of supply that ship with this file.
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
** IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
** THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
** PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
** BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
** POSSIBILITY OF SUCH DAMAGE.
********************************************************** end of preamble*/
package com.sos.dailyschedule.dialog.classes;
import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Table;

import com.sos.dashboard.globals.DashBoardConstants;
import com.sos.dialog.classes.SOSTable;
import com.sos.dialog.components.SOSTableColumn;
import com.sos.dialog.interfaces.ISOSTable;
import com.sos.localization.Messages;

/**
* \class SosPlannedTable 
* 
* \brief SosPlannedTable - 
* 
* \details
*
* \section SosPlannedTable.java_intro_sec Introduction
*
* \section SosPlannedTable.java_samples Some Samples
*
* \code
*   .... code goes here ...
* \endcode
*
* <p style="text-align:center">
* <br />---------------------------------------------------------------------------
* <br /> APL/Software GmbH - Berlin
* <br />##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
* <br />---------------------------------------------------------------------------
* </p>
* \author Uwe Risse
* \version 31.01.2012
* \see reference
*
* Created on 31.01.2012 09:59:28
 */
public class SosPlannedTable extends SOSTable implements ISOSTable {
	@SuppressWarnings("unused")
	private final String	conClassName	= "SosPlannedTable";

	public SosPlannedTable(Composite composite, int style) {
		super(composite, style);
		createTable();
	}

	protected void checkSubclass() {
		// Disable the check that prevents subclassing of SWT components
	}

    @Override
	public void createTable() {
		this.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 9, 2));
		this.setSortDirection(SWT.UP);
		this.setLinesVisible(true);
		this.setHeaderVisible(true);
		Messages messages = new Messages(DashBoardConstants.conPropertiesFileName);
		
        new SOSTableColumn(this, " " , 30, messages);
        new SOSTableColumn(this, DashBoardConstants.conSOSDashB_SchedulerID /* "Id" */, 50, messages);
		new SOSTableColumn(this, DashBoardConstants.conSOSDashB_JOB /* "Job" */, 100, messages);
	//	new SOSTableColumn(this, DashBoardConstants.conSOSDashB_JOBCHAIN /* "Job Chain" */, 100, Messages);
	//	new SOSTableColumn(this, DashBoardConstants.conSOSDashB_ORDER /* "Order" */, 100, Messages);
		new SOSTableColumn(this, DashBoardConstants.conSOSDashB_Planned /* "Planned" */, 100, messages,SOSTableColumn.ColumnType.DATE);
		new SOSTableColumn(this, DashBoardConstants.conSOSDashB_Executed /* "Executed",  */,  100, messages,SOSTableColumn.ColumnType.DATE);
		new SOSTableColumn(this, DashBoardConstants.conSOSDashB_END /* "Ended",  */,  100, messages,SOSTableColumn.ColumnType.DATE);
		new SOSTableColumn(this, DashBoardConstants.conSOSDashB_DURATION /* "Duration",  */,  90, messages,SOSTableColumn.ColumnType.DATE);
		new SOSTableColumn(this, DashBoardConstants.conSOSDashB_EXIT /* "Exit" */, 100, messages);
		new SOSTableColumn(this, DashBoardConstants.conSOSDashB_Status /* "Status" */, 100, messages);
		new SOSTableColumn(this, DashBoardConstants.conSOSDashB_LATE /* "Late" */, 53, messages);
	}
  

	 
	
}
